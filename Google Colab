Object detection: tìm vị trí của đối tượng có trong ảnh/video đôi khi ngữ còn sử dụng để tìm ngữ nghĩa của một lớp nhất định trong hình ảnh/video.

YOLOv4: mô hình mạng CNN cho việc phát hiện, nhận dạng, phân loại đối tượng được tạo ra từ việc kết hợp giữa các convolutional layers và connected layers.
Trong đóp các convolutional layers sẽ trích xuất ra các feature của ảnh, còn full-connected layers sẽ dự đoán ra xác suất đó và tọa độ của đối tượng.

Google Colab: một dịch vụ miễn phí của Google (GPU, TPU) nhằm hỗ trợ nghiên cứu và học tập về AI. GC cung cấp môi trường Code như Jupyter Notebook.

Bước 1: Truy cập https://colab.research.google.com/
  Sign In: Sử dụng Email của Google
  
Bước 2: New - Notebook
  Liên kết với Google drive 
    Xem ảnh Google Colab_ImportDrive.png (https://github.com/thinhdoanvu/ObjectDetection/blob/main/Google%20Colab_ImportDrive.png) 
    Xem ảnh Google Colab_ImportDrive_Accept.png (https://github.com/thinhdoanvu/ObjectDetection/blob/main/Google%20Colab_ImportDrive_Accept.png)
  Xác nhận quyền truy cập đến Google Drive.
  Kết quả: Mounted at /content/gdrive
  
Bước 3: Cập nhật các Package: Clik +Code
  !apt-get update
  !apt-get upgrade
  Click PLAY again
  Kết quả: Xem ảnh Google Colab_Update.png (https://github.com/thinhdoanvu/ObjectDetection/blob/main/Google%20Colab_Update.png)

Bước 4: Tải model về drive (Chú ý là phải có các ký tự ! và %)
  Clik +CODE
  !rm -rf darknet #Xóa thư mục darknet nếu có 
  %cd /content/gdrive/My\ Drive # truy cập vào Drive
  !git clone https://github.com/AlexeyAB/darknet #Tải model về Drive
  !rm -rf data #Xóa thư mục data trong thư mục darknet 
  !mkdir backup # tạo thư mục backup để lưu các file trọng số sau training
  Kết quả: 
    Xem ảnh Google Colab_DownloadModel.png (https://github.com/thinhdoanvu/ObjectDetection/blob/main/Google%20Colab_DownloadModel.png)
    Xem ảnh Google Colab_darknet.png (https://github.com/thinhdoanvu/ObjectDetection/blob/main/Google%20Colab_darknet.png)
    Xem ảnh Google Colab_darknet_inside.png (https://github.com/thinhdoanvu/ObjectDetection/blob/main/Google%20Colab_darknet_inside.png)

Bước 5: Nén toàn bộ tập tin ảnh và txt thành data.zip và tải lên Drive, bỏ trong thư mục darknet
  (LƯU Ý:) 
    Bỏ file classes.txt RA KHỎI THƯ MỤC trước khi ZIP
    Vì ở đây chỉ có 1 class nên cột dầu tiên của tất cả các file .txt là 0
    Thông thường khi gán nhãn không để ý có thể là 15, 16 hoặc số khác.
    CẦN HIỆU CHỈNH TRƯỚC KHI ZIP
  Kết quả: Google Colab_UploadData_ZIP.png (https://github.com/thinhdoanvu/ObjectDetection/blob/main/Google%20Colab_UploadData_ZIP.png)
  
Bước 6: Giải nén data.zip
  %cd /content/gdrive/MyDrive/darknet/
  !unzip data.zip
  !mv hongcau data
  Kết quả: Xem ảnh Google Colab_Unzip_Inside.png (https://github.com/thinhdoanvu/ObjectDetection/blob/main/Google%20Colab_Unzip_Inside.png)

Bước 7: Tạo các file cho trainning (tham khảo miai.vn)
  train.txt (chứa địa chỉ của các file ảnh đưa vào quá trình train model) 
  val.txt (chứa địa chỉ của các file ảnh đưa vào quá trình test và đánh giá model)
  ********************************************************************************
  CHÚ Ý KHOẢNG CÁCH CÁC DẤU CÁCH: VÌ ĐÂY LÀ CODE PYTHON
  ********************************************************************************
%cd /content/gdrive/My Drive/darknet/

#import các thư viện
import glob2
import math  
import os
import numpy as np

#LOAD FILE ẢNH
files = []
for ext in ["*.png", "*.jpeg", "*.jpg"]:
  image_files = glob2.glob(os.path.join("data/", ext))
  #tìm kiếm các file có đuôi dạng: png, jpeg, jpg trong thư mục data
  print(image_files)
  files += image_files
  #lưu tất cả các file vào biến files
  print(len(files))

nb_val = math.floor(len(files)*0.2)
#Biến nb_val được gán bằng 0.2 độ dài của biến files(chứa tất cả các tên anh)
rand_idx = np.random.randint(0, len(files), nb_val)
#Chọn ngẫu nhiên các ảnh trong biến files

# Tạo file train.txt
with open("/content/gdrive/My Drive/darknet/train.txt", "w") as f:
  for idx in np.arange(len(files)):
    if (os.path.exists(files[idx][:-3] + "txt")):
      f.write(files[idx]+'\n')

# Tạo file val.txt
with open("/content/gdrive/My Drive/darknet/val.txt", "w") as f:
  for idx in np.arange(len(files)):
    if (idx in rand_idx) and (os.path.exists(files[idx][:-3] + "txt")):
      f.write(files[idx]+'\n')
 print('done2')
  
********************************************************************************  
  Kết quả:
    Xem ảnh Google Colab_train.txt_Inside.png (https://github.com/thinhdoanvu/ObjectDetection/blob/main/Google%20Colab_train.txt_Inside.png)
    Xem ảnh: Google Colab_val.txt_Inside.png (https://github.com/thinhdoanvu/ObjectDetection/blob/main/Google%20Colab_val.txt_Inside.png)

Bước 7: Tạo các file cấu hình cho model
  Bước 7.1. Đổi tên classes.txt thành tên yolo.names (file class khi dùng LabelImg)
  Bước 7.2. Tạo file yolo.data có định dạng như sau (backup = thư mục backup)
    classes = 1
    train = train.txt
    valid = val.txt
    names = yolo.names
    backup = backup
  Kết quả: Xem ảnh Google Colab_names_data_inside.png (https://github.com/thinhdoanvu/ObjectDetection/blob/main/Google%Colab_names_data_inside.png)

Bước 8: Bật GPU và cấu hình GPU
  Click Run time - Change run time type - Click GPU
  Kết quả: Xem ảnh Google Colab_SetGPU.png (https://github.com/thinhdoanvu/ObjectDetection/blob/main/Google%20Colab_SetGPU.png)
  
******************************************************************************** 
  Truy cập darknet/makefile. Mở file makefile và sửa 4 dòng đầu tiên (sửa số 0 thành số 1):
    (Nếu không sửa online được thì tải về - Edit - Upload lên lại)
      GPU=1
      CUDNN=1
      CUDNN_HALF=1
      OPENCV=1
    Kết quả: Xem ảnh Google Colab_Makefile_Edit.png (https://github.com/thinhdoanvu/ObjectDetection/blob/main/Google%20Colab_Makefile_Edit.png)

******************************************************************************** 
  Cấu hình cho model YOLOv4. Truy câp darknet/cfg - Mở yolo4-custom.cfg và chỉnh sửa các dòng: (tải về Edit - Sau đó Upload)
    Dòng 3: Batch = 64
    Dòng 4: subdivisions=16
    Dòng 20: max_batches = số nhãn*2000 ( ví dụ mình có 3 nhãn, thì sẽ sửa thành 6000. Hoặc có thể lớn hơn, tùy ý thích)
    Dòng 22: step = 80%(của max_batches), 90% (của max_batches). ví dụ max_batches của mình là 6000, step sẽ sửa thành: step = 4800,5400
    
    Sửa classes trong mục [yolo] = số nhãn(classes của bạn), sửa filters = (số nhãn +5)*3 trong mục [Convolution] nằm trước mục [yolo]. 
      Model của mình sẽ sửa thành classes = 1 
      Model của mình có số nhãn là 1 thì để filters =18, số nhãn bằng 2 thì để filters = 21
      UPLOAD file cfg trở lại darknet
   
******************************************************************************** 
Bước 9. Tải pretrain
  %cd /content/gdrive/My\ Drive/darknet
  !wget https://github.com/AlexeyAB/darknet/releases/download/darknet_yolo_v3_optimal/yolov4.conv.137
  (LƯU Ý: Sau 6 phút Google Colab tự động đăng xuất nên nếu BÁO LỖI không tìm thấy thư mục gdrive/... thì connect lại từ bước 1 -  Import)

Bước 10: Make darknet
  %cd /content/gdrive/My\ Drive/darknet
  !make clean
  !make
  !chmod +x ./darknet

